// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/grpcSever.proto

package protocs

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ListReq struct {
	Messages             string   `protobuf:"bytes,1,opt,name=messages" json:"messages,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListReq) Reset()         { *m = ListReq{} }
func (m *ListReq) String() string { return proto.CompactTextString(m) }
func (*ListReq) ProtoMessage()    {}
func (*ListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpcSever_71b40cc05873d024, []int{0}
}
func (m *ListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListReq.Unmarshal(m, b)
}
func (m *ListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListReq.Marshal(b, m, deterministic)
}
func (dst *ListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListReq.Merge(dst, src)
}
func (m *ListReq) XXX_Size() int {
	return xxx_messageInfo_ListReq.Size(m)
}
func (m *ListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListReq proto.InternalMessageInfo

func (m *ListReq) GetMessages() string {
	if m != nil {
		return m.Messages
	}
	return ""
}

type ListResp struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Port                 string   `protobuf:"bytes,2,opt,name=port" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListResp) Reset()         { *m = ListResp{} }
func (m *ListResp) String() string { return proto.CompactTextString(m) }
func (*ListResp) ProtoMessage()    {}
func (*ListResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpcSever_71b40cc05873d024, []int{1}
}
func (m *ListResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResp.Unmarshal(m, b)
}
func (m *ListResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResp.Marshal(b, m, deterministic)
}
func (dst *ListResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResp.Merge(dst, src)
}
func (m *ListResp) XXX_Size() int {
	return xxx_messageInfo_ListResp.Size(m)
}
func (m *ListResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListResp proto.InternalMessageInfo

func (m *ListResp) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListResp) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

func init() {
	proto.RegisterType((*ListReq)(nil), "protocs.ListReq")
	proto.RegisterType((*ListResp)(nil), "protocs.ListResp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for SService service

type SServiceClient interface {
	List(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListResp, error)
}

type sServiceClient struct {
	cc *grpc.ClientConn
}

func NewSServiceClient(cc *grpc.ClientConn) SServiceClient {
	return &sServiceClient{cc}
}

func (c *sServiceClient) List(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListResp, error) {
	out := new(ListResp)
	err := grpc.Invoke(ctx, "/protocs.SService/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for SService service

type SServiceServer interface {
	List(context.Context, *ListReq) (*ListResp, error)
}

func RegisterSServiceServer(s *grpc.Server, srv SServiceServer) {
	s.RegisterService(&_SService_serviceDesc, srv)
}

func _SService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocs.SService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SServiceServer).List(ctx, req.(*ListReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _SService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protocs.SService",
	HandlerType: (*SServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _SService_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/grpcSever.proto",
}

func init() { proto.RegisterFile("api/grpcSever.proto", fileDescriptor_grpcSever_71b40cc05873d024) }

var fileDescriptor_grpcSever_71b40cc05873d024 = []byte{
	// 153 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4e, 0x2c, 0xc8, 0xd4,
	0x4f, 0x2f, 0x2a, 0x48, 0x0e, 0x4e, 0x2d, 0x4b, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0x62, 0x07, 0x53, 0xc9, 0xc5, 0x4a, 0xaa, 0x5c, 0xec, 0x3e, 0x99, 0xc5, 0x25, 0x41, 0xa9, 0x85,
	0x42, 0x52, 0x5c, 0x1c, 0xb9, 0xa9, 0xc5, 0xc5, 0x89, 0xe9, 0xa9, 0xc5, 0x12, 0x8c, 0x0a, 0x8c,
	0x1a, 0x9c, 0x41, 0x70, 0xbe, 0x92, 0x11, 0x17, 0x07, 0x44, 0x59, 0x71, 0x81, 0x90, 0x10, 0x17,
	0x4b, 0x5e, 0x62, 0x6e, 0x2a, 0x54, 0x0d, 0x98, 0x0d, 0x12, 0x2b, 0xc8, 0x2f, 0x2a, 0x91, 0x60,
	0x82, 0x88, 0x81, 0xd8, 0x46, 0x96, 0x5c, 0x1c, 0xc1, 0xc1, 0xa9, 0x45, 0x65, 0x99, 0xc9, 0xa9,
	0x42, 0xba, 0x5c, 0x2c, 0x20, 0xfd, 0x42, 0x02, 0x7a, 0x50, 0x8b, 0xf5, 0xa0, 0xb6, 0x4a, 0x09,
	0xa2, 0x89, 0x14, 0x17, 0x28, 0x31, 0x24, 0xb1, 0x81, 0xc5, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x18, 0x90, 0x81, 0x99, 0xbc, 0x00, 0x00, 0x00,
}
